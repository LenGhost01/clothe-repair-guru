<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chenhaozhe.clothe_guru_code.mapper.MerchandiseMapper">
   <!-- 通过数据传输对象中的属性来编写动态sql查询语句 -->
    <select id="getMerchandise" parameterType="MerchandiseWrapper" resultType="ViewMerchandiseEntity">
        SELECT merchandise_id, merchandise_name,merchandise_description,low_price,high_price,category,
        material,belongs,rating,publish_time,sales,satisfaction_rate,main_img,sub_img,merchant_name,address,payment_method
        FROM merchant_merchandise_view
        <where>
            <if test="merchandiseWrapper.keyWord != null and merchandiseWrapper.keyLabel != null">
                ${merchandiseWrapper.keyLabel} LIKE CONCAT('%', #{merchandiseWrapper.keyWord}, '%')
            </if>
            <choose>
                <when test="merchandiseWrapper.lowPrice != null">
                    AND low_price <![CDATA[ >= ]]> #{merchandiseWrapper.lowPrice}
                </when>
                <when test="merchandiseWrapper.highPrice != null">
                    AND low_price <![CDATA[ <= ]]> #{merchandiseWrapper.highPrice}
                </when>
            </choose>
        </where>
        <if test="merchandiseWrapper.orderLabel != null and merchandiseWrapper.orderRule != null">
            ORDER BY ${merchandiseWrapper.orderLabel} ${merchandiseWrapper.orderRule}
        </if>
        <if test="merchandiseWrapper.pageSize != null and merchandiseWrapper.offset != null">
            LIMIT #{merchandiseWrapper.pageSize} OFFSET #{merchandiseWrapper.offset}
        </if>
    </select>

    <select id="getMerchandiseCount" parameterType="MerchandiseWrapper" resultType="INTEGER">
        SELECT count(merchandise_id)
        FROM merchant_merchandise_view
        <where>
            <if test="merchandiseWrapper.keyWord != null and merchandiseWrapper.keyLabel != null">
                ${merchandiseWrapper.keyLabel} LIKE CONCAT('%', #{merchandiseWrapper.keyWord}, '%')
            </if>
            <choose>
                <when test="merchandiseWrapper.lowPrice != null">
                    AND low_price <![CDATA[ >= ]]> #{merchandiseWrapper.lowPrice}
                </when>
                <when test="merchandiseWrapper.highPrice != null">
                    AND low_price <![CDATA[ <= ]]> #{merchandiseWrapper.highPrice}
                </when>
            </choose>
        </where>
        <if test="merchandiseWrapper.orderLabel != null and merchandiseWrapper.orderRule != null">
            ORDER BY ${merchandiseWrapper.orderLabel} ${merchandiseWrapper.orderRule}
        </if>
        <if test="merchandiseWrapper.pageSize != null and merchandiseWrapper.offset != null">
            LIMIT #{merchandiseWrapper.pageSize} OFFSET #{merchandiseWrapper.offset}
        </if>
    </select>
    <insert id="insertMerchandise" parameterType="map">
        insert into merchandise
        <trim prefix="(" suffix=")" suffixOverrides=",">
            # 这里trim的作用是在merchant语句后面生成一个括号，suffixOverrides可以去除多余的逗号，下面同理
            <foreach item="key" index="index" collection="merchandiseMap.keySet" open="" separator="," close="">
                ${key}
            </foreach>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            <foreach item="value" index="index" collection="merchandiseMap.values" open="" separator="," close="">
                #{value}
            </foreach>
        </trim>
    </insert>

    <update id="updateMerchandise" parameterType="map">
        update merchandise SET
        <trim prefixOverrides=",">
            <foreach collection="merchandiseMap" item="entry" index="key" separator=",">
                <if test="entry.key != 'merchandise_id'">
                    ${key} = #{entry.value}
                </if>
            </foreach>
        </trim>
    </update>
</mapper>